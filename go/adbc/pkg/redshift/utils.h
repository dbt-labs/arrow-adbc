// Code generated by _tmpl/utils.h.tmpl. DO NOT EDIT.

// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// clang-format off
//go:build driverlib
// clang-format on

#pragma once

#include "../../drivermgr/arrow-adbc/adbc.h"
#include <stdlib.h>

struct AdbcError* RedshiftErrorFromArrayStream(struct ArrowArrayStream*, AdbcStatusCode*);
AdbcStatusCode RedshiftDatabaseGetOption(struct AdbcDatabase*, const char*, char*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseGetOptionBytes(struct AdbcDatabase*, const char*, uint8_t*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseGetOptionDouble(struct AdbcDatabase*, const char*, double*, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseGetOptionInt(struct AdbcDatabase*, const char*, int64_t*, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseInit(struct AdbcDatabase* db, struct AdbcError* err);
AdbcStatusCode RedshiftDatabaseNew(struct AdbcDatabase* db, struct AdbcError* err);
AdbcStatusCode RedshiftDatabaseRelease(struct AdbcDatabase* db, struct AdbcError* err);
AdbcStatusCode RedshiftDatabaseSetOption(struct AdbcDatabase* db, const char* key, const char* value, struct AdbcError* err);
AdbcStatusCode RedshiftDatabaseSetOptionBytes(struct AdbcDatabase*, const char*, const uint8_t*, size_t, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseSetOptionDouble(struct AdbcDatabase*, const char*, double, struct AdbcError*);
AdbcStatusCode RedshiftDatabaseSetOptionInt(struct AdbcDatabase*, const char*, int64_t, struct AdbcError*);

AdbcStatusCode RedshiftConnectionCancel(struct AdbcConnection*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionCommit(struct AdbcConnection* cnxn, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionGetInfo(struct AdbcConnection* cnxn, const uint32_t* codes, size_t len, struct ArrowArrayStream* out, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionGetObjects(struct AdbcConnection* cnxn, int depth, const char* catalog, const char* dbSchema, const char* tableName, const char** tableType, const char* columnName, struct ArrowArrayStream* out, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionGetOption(struct AdbcConnection*, const char*, char*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetOptionBytes(struct AdbcConnection*, const char*, uint8_t*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetOptionDouble(struct AdbcConnection*, const char*, double*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetOptionInt(struct AdbcConnection*, const char*, int64_t*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetStatistics(struct AdbcConnection*, const char*, const char*, const char*, char, struct ArrowArrayStream*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetStatisticNames(struct AdbcConnection*, struct ArrowArrayStream*, struct AdbcError*);
AdbcStatusCode RedshiftConnectionGetTableSchema(struct AdbcConnection* cnxn, const char* catalog, const char* dbSchema, const char* tableName, struct ArrowSchema* schema, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionGetTableTypes(struct AdbcConnection* cnxn, struct ArrowArrayStream* out, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionInit(struct AdbcConnection* cnxn, struct AdbcDatabase* db, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionNew(struct AdbcConnection* cnxn, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionReadPartition(struct AdbcConnection* cnxn, const uint8_t* serialized, size_t serializedLen, struct ArrowArrayStream* out, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionRelease(struct AdbcConnection* cnxn, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionRollback(struct AdbcConnection* cnxn, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionSetOption(struct AdbcConnection* cnxn, const char* key, const char* val, struct AdbcError* err);
AdbcStatusCode RedshiftConnectionSetOptionBytes(struct AdbcConnection*, const char*, const uint8_t*, size_t, struct AdbcError*);
AdbcStatusCode RedshiftConnectionSetOptionDouble(struct AdbcConnection*, const char*, double, struct AdbcError*);
AdbcStatusCode RedshiftConnectionSetOptionInt(struct AdbcConnection*, const char*, int64_t, struct AdbcError*);

AdbcStatusCode RedshiftStatementBind(struct AdbcStatement* stmt, struct ArrowArray* values, struct ArrowSchema* schema, struct AdbcError* err);
AdbcStatusCode RedshiftStatementBindStream(struct AdbcStatement* stmt, struct ArrowArrayStream* stream, struct AdbcError* err);
AdbcStatusCode RedshiftStatementCancel(struct AdbcStatement*, struct AdbcError*);
AdbcStatusCode RedshiftStatementExecuteQuery(struct AdbcStatement* stmt, struct ArrowArrayStream* out, int64_t* affected, struct AdbcError* err);
AdbcStatusCode RedshiftStatementExecutePartitions(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcPartitions* partitions, int64_t* affected, struct AdbcError* err);
AdbcStatusCode RedshiftStatementExecutePartitionsTrampoline(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcPartitions* partitions, int64_t* affected, struct AdbcError* err);
AdbcStatusCode RedshiftStatementExecuteSchema(struct AdbcStatement*, struct ArrowSchema*, struct AdbcError*);
AdbcStatusCode RedshiftStatementGetOption(struct AdbcStatement*, const char*, char*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftStatementGetOptionBytes(struct AdbcStatement*, const char*, uint8_t*, size_t*, struct AdbcError*);
AdbcStatusCode RedshiftStatementGetOptionDouble(struct AdbcStatement*, const char*, double*, struct AdbcError*);
AdbcStatusCode RedshiftStatementGetOptionInt(struct AdbcStatement*, const char*, int64_t*, struct AdbcError*);
AdbcStatusCode RedshiftStatementGetParameterSchema(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcError* err);
AdbcStatusCode RedshiftStatementNew(struct AdbcConnection* cnxn, struct AdbcStatement* stmt, struct AdbcError* err);
AdbcStatusCode RedshiftStatementPrepare(struct AdbcStatement* stmt, struct AdbcError* err);
AdbcStatusCode RedshiftStatementRelease(struct AdbcStatement* stmt, struct AdbcError* err);
AdbcStatusCode RedshiftStatementSetOption(struct AdbcStatement* stmt, const char* key, const char* value, struct AdbcError* err);
AdbcStatusCode RedshiftStatementSetOptionBytes(struct AdbcStatement*, const char*, const uint8_t*, size_t, struct AdbcError*);
AdbcStatusCode RedshiftStatementSetOptionDouble(struct AdbcStatement*, const char*, double, struct AdbcError*);
AdbcStatusCode RedshiftStatementSetOptionInt(struct AdbcStatement*, const char*, int64_t, struct AdbcError*);
AdbcStatusCode RedshiftStatementSetSqlQuery(struct AdbcStatement* stmt, const char* query, struct AdbcError* err);
AdbcStatusCode RedshiftStatementSetSubstraitPlan(struct AdbcStatement* stmt, const uint8_t* plan, size_t length, struct AdbcError* err);

AdbcStatusCode RedshiftDriverInit(int version, void* rawDriver, struct AdbcError* err);

static inline void RedshifterrRelease(struct AdbcError* error) {
  if (error->release) {
    error->release(error);
    error->release = NULL;
  }
}

void Redshift_release_error(struct AdbcError* error);

struct RedshiftError {
  char* message;
  char** keys;
  uint8_t** values;
  size_t* lengths;
  int count;
};

void RedshiftReleaseErrWithDetails(struct AdbcError* error);

int RedshiftErrorGetDetailCount(const struct AdbcError* error);
struct AdbcErrorDetail RedshiftErrorGetDetail(const struct AdbcError* error, int index);

int RedshiftArrayStreamGetSchemaTrampoline(struct ArrowArrayStream* stream, struct ArrowSchema* out);
int RedshiftArrayStreamGetNextTrampoline(struct ArrowArrayStream* stream, struct ArrowArray* out);
